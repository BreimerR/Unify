abstract class EntertainmentDevice{
	public{
		boolean deviceState;
		Int{
			 maxSetting;

            volumeLevel = 0
		}

		abstract{
			buttonFivePressed();
			buttonSixPressed();
		}

		deviceFeedback{
			if(deviceState > maxSetting || deviceState  < 0) deviceState = 0

			log("On "+ deviceState)
		}

		buttonSevenPressed -> logln("Volume at:" + volumeLevel);


		buttonEightPressed-> logln("Volume at:" + volumeLevel);

	}
}


class TvDevice: EntertainmentDevice {
	public{
		constructor(Int newDevice,Int newMaxSetting);

		void{
			override buttonFivePressed(){
					log('Channel down')
					deviceState--;
			}

			override buttonSixPressed(){
				log('Channel up')
				deviceState++;
			}
		}
	}
}

abstract class RemoteButton{

	public{
		constructor(device);
		set device(EntertainmentDevice device) {

		}

		buttonFivePressed -> device.buttonFivePressed()

		buttonSixPressed -> device.buttonSixPressed()

		deviceFeedback -> device.deviceFeedback();

		abstruct void buttonNinePressed();
	}
}


class TvRemoteMute(RemoteButton){
	public{
		void buttonNinePressed -> log("Tv Muted")
	}
}

class TvRemotePaused(RemoteButton){
	public{
		void buttonNinePressed -> log("Tv Paused")
	}
}


main(String[] args){
	$tv = TvRemoteMute(TvDevice(1,200))

	$tv.buttonFivePressed();

	$tv1 = TvRemotePaused(TvDevice(1,200))

	$tv.buttonSixPressed()

	$tv.buttonNinePressed()

}